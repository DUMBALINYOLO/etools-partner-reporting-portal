version: '2.1'

services:
#  beater-prp:
#    command: bash -c "/usr/local/bin/waitforit -host=db -port=5432 && celery -A django_api beat -l ${CELERY_LOG_LEVEL:-info} --scheduler django_celery_beat.schedulers:DatabaseScheduler -b $REDIS_URL"
#    image: 'unicef/etools-prp'
#    env_file:
#      - .env
#    depends_on:
#      - django_api
#      - redis
#    restart: always
#    volumes:
#      - './django_api:/code/'
#
#  worker-prp:
#    command: bash -c "/usr/local/bin/waitforit -host=db -port=5432 && celery -A django_api worker -l ${CELERY_LOG_LEVEL:-info} -b $REDIS_URL"
#    image: 'unicef/etools-prp'
#    env_file:
#      - .env
#    depends_on:
#      - django_api
#      - redis
#    restart: always
#    volumes:
#      - './django_api:/code/'

  proxy:
    image: traefik:v2.1
    command: --api.insecure=true --providers.docker
    ports:
      - "8081:80"
      - "8080:8080"
    container_name: prp_proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
#    logging:
#      driver: none


  django_api:
    image: unicef/etools-prp
    env_file:
      - .env
    build:
      context: ./django_api
      dockerfile: ./Dockerfile
      args:
        ENV: dev
        REQUIREMENT_FILE: dev.txt
    volumes:
      - './django_api:/code/'
      - './data/django_api_logs:/data/django_api/logs'
      - './data/django_api_uploads_unicef_progress_reports:/data/django_api/uploads/unicef/progress_reports'
#    command: bash -c "/usr/local/bin/waitforit -host=db -port=5432 && python /code/manage.py makemigrations --merge --noinput && python /code/manage.py migrate && python manage.py collectstatic --noinput && uwsgi --asyncio 50 --greenlet --ini /code/django_api/uwsgi.ini"
    command: bash -c "python /code/manage.py runserver 0.0.0.0:8080"
    depends_on:
      - db
    labels:
      - "traefik.http.routers.django_api.rule=PathPrefix(`/api`,`/social`,`/uploads`)"
      - traefik.http.routers.django_api.service=django_api
      - traefik.http.services.django_api.loadBalancer.server.port=8080
      - traefik.enable=true

  db:
    image: unicef/etools-prp-db
    env_file:
      - .env
    build:
      context: ./db
      dockerfile: ./Dockerfile

  prp_redis:
    image: redis:4.0.1-alpine
    container_name: prp_redis

  # id-management-frontend:
  #   image: unicef/etools-prp-id-management-frontend
  #   build:
  #     context: ./react/id_management_frontend
  #     dockerfile: ./Dockerfile
  #   volumes:
  #     - ./react/id_management_frontend/:/code
  #     - /code/node_modules
  #   command: bash -c "npm start"
  #   labels:
  #     - "traefik.http.routers.id-management-frontend.rule=PathPrefix(`/id-management`)"
  #     - traefik.http.routers.id-management-frontend.service=id-management-frontend
  #     - traefik.http.routers.id-management-frontend.middlewares=id-management-frontend-stripprefix
  #     - traefik.http.middlewares.id-management-frontend-stripprefix.stripprefix.prefixes=/id-management
  #     - traefik.http.services.id-management-frontend.loadBalancer.server.port=3000
  #     - traefik.enable=true

  polymer:
    image: unicef/etools-prp-polymer3
    build:
      context: ./polymer_3
      dockerfile: ./Dockerfile-dev
    volumes:
        - ./polymer_3/:/code
    command: ash -c "npm run dev"
    labels:
      - "traefik.http.routers.polymer.rule=PathPrefix(`/`)"
      - traefik.http.routers.polymer.service=polymer
      # - traefik.http.routers.polymer.middlewares=polymer-stripprefix
      # - traefik.http.middlewares.polymer-stripprefix.stripprefix.prefixes=/app
      - traefik.http.services.polymer.loadBalancer.server.port=8084
      - traefik.enable=true