apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: beater
  labels:
    app: beater
  annotations:
    revision: "{{CF_SHORT_REVISION}}"
  namespace: {{NAMESPACE}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: beater-container
  template:
    metadata:
      labels:
        app: beater-container
    spec:
      containers:
        - name: beater
          image: unicef/etools-prp
          volumeMounts:
            - name: static-volume-{{NAMESPACE}}
              mountPath: /data
          command: ["bash"]
          args: ["-c", "/usr/local/bin/waitforit -host=db -port=5432 && python manage.py celery beat --loglevel=${CELERY_LOG_LEVEL:-debug}"]
          ports:
            - containerPort: 8000
          env:
            - name: DJANGO_ALLOWED_HOST
              value: {{DJANGO_ALLOWED_HOST}}
            
            - name: DJANGO_DEBUG
              value: "{{DJANGO_DEBUG}}"

            - name: DOMAIN_NAME
              value: {{DOMAIN_NAME}}

            - name: ENV
              value: {{ENV}}

            - name: REDIS_URL
              value: redis://redis:6379/0

            - name: POSTGRES_DB
              value: {{POSTGRES_DB}}

            - name: POSTGRES_HOST
              value: {{POSTGRES_HOST}}

            - name: POSTGRES_USER
              value: {{POSTGRES_USER}}
            - name: POSTGRES_PASSWORD
              value: {{POSTGRES_PASSWORD}}

            - name: AWS_S3_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-s3-access-key-id
                  key: password
            - name: AWS_S3_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-s3-secret-access-key
                  key: password
            - name: AWS_STORAGE_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: aws-storage-bucket-name
                  key: password
            - name: AZURE_B2C_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: azure-b2c-client-id
                  key: password
            - name: AZURE_B2C_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: azure-b2c-client-secret
                  key: password
            - name: AZURE_B2C_POLICY_NAME
              valueFrom:
                secretKeyRef:
                  name: azure-b2c-policy-name
                  key: password
            - name: ELASTIC_APM_DEBUG
              valueFrom:
                secretKeyRef:
                  name: elastic-apm-debug
                  key: password
            - name: ELASTIC_APM_SECRET_TOKEN
              valueFrom:
                secretKeyRef:
                  name: elastic-apm-secret-token
                  key: password
            - name: ELASTIC_APM_SERVER_URL
              valueFrom:
                secretKeyRef:
                  name: elastic-apm-server-url
                  key: password
            - name: ELASTIC_APM_SERVICE_NAME
              valueFrom:
                secretKeyRef:
                  name: elastic-apm-service-name
                  key: password
            - name: EMAIL_BACKEND
              valueFrom:
                secretKeyRef:
                  name: email-backend
                  key: password
            - name: PMP_API_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pmp-api-password
                  key: password
            - name: PMP_API_USER
              valueFrom:
                secretKeyRef:
                  name: pmp-api-user
                  key: password
            - name: PMP_API_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: pmp-api-endpoint
                  key: password
            
            # - name: POSTGRES_PASSWORD
            #   valueFrom:
            #     secretKeyRef:
            #       name: eprp-staging
            #       key: postgres-password
            
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: secret-key
                  key: password
      volumes:
      - name: static-volume-{{NAMESPACE}}
        persistentVolumeClaim:
          claimName: static-volume-claim-{{NAMESPACE}}
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: worker
  labels:
    app: worker
  annotations:
    revision: "{{CF_SHORT_REVISION}}"
  namespace: {{NAMESPACE}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker-container
  template:
    metadata:
      labels:
        app: worker-container
    spec:
      containers:
        - name: beater
          image: unicef/etools-prp
          volumeMounts:
            - name: static-volume-{{NAMESPACE}}
              mountPath: /data
          command: ["bash"]
          args: ["-c", "/usr/local/bin/waitforit -host=db -port=5432 && python manage.py celery worker -E --loglevel=${CELERY_LOG_LEVEL:-info}"]
          ports:
            - containerPort: 8000
          env:
            - name: C_FORCE_ROOT
              value: "1"

            - name: DJANGO_ALLOWED_HOST
              value: {{DJANGO_ALLOWED_HOST}}
            
            - name: DJANGO_DEBUG
              value: "{{DJANGO_DEBUG}}"

            - name: DOMAIN_NAME
              value: {{DOMAIN_NAME}}

            - name: ENV
              value: {{ENV}}

            - name: REDIS_URL
              value: redis://redis:6379/0

            - name: POSTGRES_DB
              value: {{POSTGRES_DB}}

            - name: POSTGRES_HOST
              value: {{POSTGRES_HOST}}

            - name: POSTGRES_USER
              value: {{POSTGRES_USER}}
            - name: POSTGRES_PASSWORD
              value: {{POSTGRES_PASSWORD}}

            - name: AWS_S3_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-s3-access-key-id
                  key: password
            - name: AWS_S3_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-s3-secret-access-key
                  key: password
            - name: AWS_STORAGE_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: aws-storage-bucket-name
                  key: password
            - name: AZURE_B2C_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: azure-b2c-client-id
                  key: password
            - name: AZURE_B2C_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: azure-b2c-client-secret
                  key: password
            - name: AZURE_B2C_POLICY_NAME
              valueFrom:
                secretKeyRef:
                  name: azure-b2c-policy-name
                  key: password
            - name: ELASTIC_APM_DEBUG
              valueFrom:
                secretKeyRef:
                  name: elastic-apm-debug
                  key: password
            - name: ELASTIC_APM_SECRET_TOKEN
              valueFrom:
                secretKeyRef:
                  name: elastic-apm-secret-token
                  key: password
            - name: ELASTIC_APM_SERVER_URL
              valueFrom:
                secretKeyRef:
                  name: elastic-apm-server-url
                  key: password
            - name: ELASTIC_APM_SERVICE_NAME
              valueFrom:
                secretKeyRef:
                  name: elastic-apm-service-name
                  key: password
            - name: EMAIL_BACKEND
              valueFrom:
                secretKeyRef:
                  name: email-backend
                  key: password
            - name: PMP_API_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pmp-api-password
                  key: password
            - name: PMP_API_USER
              valueFrom:
                secretKeyRef:
                  name: pmp-api-user
                  key: password
            - name: PMP_API_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: pmp-api-endpoint
                  key: password
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: secret-key
                  key: password
            
      volumes:
      - name: static-volume-{{NAMESPACE}}
        persistentVolumeClaim:
          claimName: static-volume-claim-{{NAMESPACE}}
